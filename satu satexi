[1mdiff --git a/Dockerfile b/Dockerfile[m
[1mindex 3477a02..4b01aaf 100644[m
[1m--- a/Dockerfile[m
[1m+++ b/Dockerfile[m
[36m@@ -2,12 +2,16 @@[m [mFROM microsoft/dotnet:1.1-runtime[m
 [m
 RUN apt-get update \[m
     && curl -sL https://deb.nodesource.com/setup_8.x | bash \[m
[31m-    && apt-get -y install nodejs[m
[32m+[m[32m    && apt-get -y install nodejs \[m
[32m+[m[32m    && apt-get -y install bzip2 \[m
[32m+[m[32m    && apt-get -y install libfontconfig[m
 [m
 WORKDIR /app[m
 COPY out .[m
 COPY node_modules node_modules[m
 [m
[32m+[m[32mRUN npm rebuild phantomjs-prebuilt[m
[32m+[m
 EXPOSE 5000[m
 [m
 ENTRYPOINT ["dotnet", "Pdf.Storage.dll"][m
[1mdiff --git a/Pdf/PdfConvert.cs b/Pdf/PdfConvert.cs[m
[1mindex c2ba0e0..e7c96be 100644[m
[1m--- a/Pdf/PdfConvert.cs[m
[1m+++ b/Pdf/PdfConvert.cs[m
[36m@@ -3,6 +3,7 @@[m [musing System.Collections.Generic;[m
 using System.Dynamic;[m
 using System.Linq;[m
 using Microsoft.AspNetCore.NodeServices;[m
[32m+[m[32musing Newtonsoft.Json.Linq;[m
 [m
 namespace Pdf.Storage.Pdf[m
 {[m
[36m@@ -16,6 +17,8 @@[m [mnamespace Pdf.Storage.Pdf[m
 [m
         public (byte[] data, string html) CreatePdfFromHtml(string html)[m
         {[m
[32m+[m[32m            Console.WriteLine("Creting from: " + html);[m
[32m+[m
             var pdf = _nodeServices.InvokeAsync<ExpandoObject>(@"./node/convert.js", html, new {}).Result;[m
 [m
             var data = pdf.SingleOrDefault(x => x.Key == "data").Value;[m
[1mdiff --git a/k8s/master.yaml b/k8s/master.yaml[m
[1mindex e69de29..6fdca86 100644[m
[1m--- a/k8s/master.yaml[m
[1m+++ b/k8s/master.yaml[m
[36m@@ -0,0 +1,79 @@[m
[32m+[m[32mapiVersion: extensions/v1beta1[m
[32m+[m[32mkind: Deployment[m
[32m+[m[32mmetadata:[m
[32m+[m[32m  labels:[m
[32m+[m[32m    app: pdf-storage-master[m
[32m+[m[32m    version: master[m
[32m+[m[32m  name: pdf-storage-master[m
[32m+[m[32m  namespace: pdf-storage[m
[32m+[m[32mspec:[m
[32m+[m[32m  replicas: 1[m
[32m+[m[32m  selector:[m
[32m+[m[32m    matchLabels:[m
[32m+[m[32m      app: pdf-storage-master[m
[32m+[m[32m      version: master[m
[32m+[m[32m  strategy:[m
[32m+[m[32m    rollingUpdate:[m
[32m+[m[32m      maxSurge: 1[m
[32m+[m[32m      maxUnavailable: 1[m
[32m+[m[32m    type: RollingUpdate[m
[32m+[m[32m  template:[m
[32m+[m[32m    metadata:[m
[32m+[m[32m      creationTimestamp: null[m
[32m+[m[32m      labels:[m
[32m+[m[32m        app: pdf-storage-master[m
[32m+[m[32m        version: master[m
[32m+[m[32m      name: pdf-storage-master[m
[32m+[m[32m    spec:[m
[32m+[m[32m      containers:[m
[32m+[m[32m      - image: eu.gcr.io/ptcs-docker-registry/pdf-storage:latest-master[m
[32m+[m[32m        imagePullPolicy: Always[m
[32m+[m[32m        name: pdf-storage-master[m
[32m+[m[32m        env:[m
[32m+[m[32m          - name: ASPNETCORE_ENVIRONMENT[m
[32m+[m[32m            value: master[m
[32m+[m[32m      dnsPolicy: ClusterFirst[m
[32m+[m[32m      restartPolicy: Always[m
[32m+[m[32m      terminationGracePeriodSeconds: 30[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mapiVersion: v1[m
[32m+[m[32mkind: Service[m
[32m+[m[32mmetadata:[m
[32m+[m[32m  labels:[m
[32m+[m[32m    app: pdf-storage-master[m
[32m+[m[32m    version: master[m
[32m+[m[32m  name: pdf-storage-master[m
[32m+[m[32m  namespace: pdf-storage[m
[32m+[m[32mspec:[m
[32m+[m[32m  type: ClusterIP[m
[32m+[m[32m  ports:[m
[32m+[m[32m  - port: 80[m
[32m+[m[32m    protocol: TCP[m
[32m+[m[32m    targetPort: 5000[m
[32m+[m[32m  selector:[m
[32m+[m[32m    app: pdf-storage-master[m
[32m+[m[32m    version: master[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mapiVersion: extensions/v1beta1[m
[32m+[m[32mkind: Ingress[m
[32m+[m[32mmetadata:[m
[32m+[m[32m  name: pdf-storage-ingress[m
[32m+[m[32m  namespace: pdf-storage[m
[32m+[m[32m  annotations:[m
[32m+[m[32m    kubernetes.io/ingress.class: traefik[m
[32m+[m[32mspec:[m
[32m+[m[32m  rules:[m
[32m+[m[32m    - host: pdf-storage-master.protacon.cloud[m
[32m+[m[32m      http:[m
[32m+[m[32m        paths:[m
[32m+[m[32m          - backend:[m
[32m+[m[32m              serviceName: pdf-storage-master[m
[32m+[m[32m              servicePort: 80[m
[32m+[m[32m  tls:[m
[32m+[m[32m    - hosts:[m
[32m+[m[32m      - pdf-storage-master.protacon.cloud[m
[32m+[m[32m      secretName: eventale-crt[m
\ No newline at end of file[m
[1mdiff --git a/node/convert.js b/node/convert.js[m
[1mindex e3acff3..b74783b 100644[m
[1m--- a/node/convert.js[m
[1m+++ b/node/convert.js[m
[36m@@ -5,8 +5,8 @@[m [mmodule.exports = function (callback, html, data) {[m
         .createBuffer(html, data, {})[m
         .then(resultBuffer => {[m
             callback(/* error */ null, resultBuffer);[m
[31m-        })[m
[32m+[m[32m        }, error => callback(/* error */ null, error))[m
         .catch((error) => {[m
[31m-            callback(error, null);[m
[32m+[m[32m            callback(/* error */ null, error);[m
         });[m
 };[m
\ No newline at end of file[m
[1mdiff --git a/package.json b/package.json[m
[1mindex c560e0c..a575847 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -5,5 +5,8 @@[m
   "main": "index.js",[m
   "scripts": {},[m
   "author": "",[m
[31m-  "license": "MIT"[m
[32m+[m[32m  "license": "MIT",[m
[32m+[m[32m  "dependencies": {[m
[32m+[m[32m    "html-to-pdf": "git+https://github.com/protacon/html-to-pdf.git"[m
[32m+[m[32m  }[m
 }[m
warning: LF will be replaced by CRLF in package.json.
The file will have its original line endings in your working directory.
